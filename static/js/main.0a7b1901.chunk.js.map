{"version":3,"sources":["predict.js","hoc/Auks/Auks.js","UI/Backdrop/Backdrop.js","UI/Modal/Modal.js","UI/Button/Button.js","App.js","serviceWorker.js","index.js","UI/Button/Button.module.css","UI/Modal/Modal.module.css","UI/Backdrop/Backdrop.module.css","logo.svg"],"names":["start","window","tf","progress","bytesUsed","MODEL_URL","location","href","generate","model","img","output","a","console","log","img_tensor","fromPixels","shape","scaled_img_tensor","resizeBilinear","expandDims","div","dispose","performance","now","predict","generated","end","flatten","arraySync","result","innerHTML","generateImage","img_id","canvas_id","then","document","getElementById","auks","props","children","backdrop","show","className","classes","Backdrop","onClick","clicked","modal","modalClosed","Modal","style","transform","opacity","button","Button","btnType","join","ODimage","Image","App","state","uploadedImageURL","ImageURL","uploaded","generationStatus","updateGenerationProgressInterval","operating","width","height","operateCancelHandler","setState","operateHandler","onUpload","e","input","target","reader","FileReader","onload","dataURL","image","src","readAsDataURL","files","detectOD","fd","FormData","append","fetch","method","body","response","text","catch","error","alert","setInterval","generationProgress","clearInterval","componentWillUnmount","Container","fluid","display","this","Row","textAlign","fontSize","Col","xs","md","lg","xl","marginTop","label","onChange","multiple","custom","type","name","id","alt","variant","Spinner","animation","role","margin","reload","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.0a7b1901.chunk.js","sourcesContent":["import * as tf from '@tensorflow/tfjs';\r\nimport { useEffect } from 'react';\r\nwindow.tf = tf;\r\nwindow.progress = 0;\r\nwindow.bytesUsed = 0;\r\n\r\ntf.enableProdMode();\r\n\r\nlet start;\r\n\r\nconst MODEL_URL = window.location.href + 'model_full/model.json';\r\n\r\nconst checkOD = (img) => {\r\n\tif (img != undefined) return true;\r\n\tsetTimeout(function () {\r\n\t\treturn false;\r\n\t}, 1000);\r\n};\r\nconst generate = async (model, img, output) => {\r\n\tconsole.log('Generation start');\r\n\tconsole.log(img);\r\n\t// while(img == undefined){\r\n\t// \tsetTimeout(function () {\r\n\t// \t\tconsole.log(\"Processing Image\");\r\n\t// \t}, 1000);\r\n\t// }\r\n\t// console.log(checkOD(img));\r\n\tlet img_tensor = tf.browser.fromPixels(img);\r\n\r\n\tlet scaled_img_tensor;\r\n\tconsole.log('Original image size:', img_tensor.shape);\r\n\tscaled_img_tensor = tf.tidy(() =>\r\n\t\ttf.image.resizeBilinear(img_tensor, [224, 224]).expandDims(0).div(255)\r\n\t); // Batch size may be larger\r\n\timg_tensor.dispose();\r\n\tstart = performance.now();\r\n\tlet generated = await model.predict(scaled_img_tensor);\r\n\tscaled_img_tensor.dispose();\r\n\tlet end = performance.now();\r\n\tconsole.log('Image Generated');\r\n\tconsole.log(`Took ${(end - start) / 1000} s to generate the image`);\r\n\r\n\t// tf.browser.toPixels((generated.squeeze(0).add(1)).div(2), output);\r\n\tconsole.log('generated.print: ' + generated.flatten().arraySync());\r\n\tlet result = (1 - generated.flatten().arraySync()) * 100;\r\n\toutput.innerHTML =\r\n\t\t'The chance that you test postive for glaucoma is ' + result + '%';\r\n\tgenerated.dispose();\r\n};\r\n\r\nconst generateImage = async (img_id, canvas_id) => {\r\n\tlet model_load_start = performance.now();\r\n\r\n\tawait tf.loadLayersModel(MODEL_URL).then(async (model) => {\r\n\t\tconsole.log('Model Loaded');\r\n\t\tlet model_load_end = performance.now();\r\n\t\tawait generate(model, document.getElementById(img_id), document.getElementById(canvas_id));\r\n\t\ttf.disposeVariables();\r\n\t\tconsole.log(tf.memory());\r\n\t});\r\n\twindow.progress = 1.0;\r\n};\r\n\r\nexport { generateImage };\r\n","const auks = (props) => props.children;\r\n\r\nexport default auks;","import React from 'react'\r\nimport classes from './Backdrop.module.css'\r\n\r\n\r\nconst backdrop = (props) =>(\r\n    props.show ? <div className={classes.Backdrop}\r\n                        onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../hoc/Auks/Auks';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nconst modal = (props) => (\r\n    <Aux>\r\n        <Backdrop show={props.show} clicked={props.modalClosed} />\r\n        <div className={classes.Modal}\r\n            style={{\r\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                opacity: props.show ? '1' : '0'\r\n            }}>\r\n            {props.children}\r\n        </div>\r\n    </Aux>\r\n);\r\n\r\nexport default modal;","import React from 'react'\r\nimport classes from './Button.module.css'\r\n\r\nconst button= (props) => (\r\n    <button\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport { Button, Container, Row, Col, Spinner } from 'react-bootstrap';\r\nimport { generateImage } from './predict.js';\r\nimport Modal from './UI/Modal/Modal';\r\nimport PressButton from './UI/Button/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nvar ODimageData;\r\nvar ODimage = new Image();\r\nclass App extends Component {\r\n\tstate = {\r\n\t\tuploadedImageURL: 'data:image/png;',\r\n\t\tImageURL: 'data:image/png;',\r\n\t\tuploaded: false,\r\n\t\tgenerationStatus: 0,\r\n\t\tupdateGenerationProgressInterval: -1,\r\n\t\tbytesUsed: 0,\r\n\t\toperating: false,\r\n\t\twidth: 1,\r\n\t\theight: 1,\r\n\t};\r\n\r\n\toperateCancelHandler = () => {\r\n\t\tthis.setState({ operating: false });\r\n\t};\r\n\r\n\toperateHandler = () => {\r\n\t\tthis.setState({ operating: true });\r\n\t};\r\n\r\n\tonUpload = (e) => {\r\n\t\tvar input = e.target;\r\n\t\tvar reader = new FileReader();\r\n\t\treader.onload = () => {\r\n\t\t\tvar dataURL = reader.result;\r\n\t\t\tvar image = new Image();\r\n\t\t\timage.src = dataURL;\r\n\t\t\timage.onload = () => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tuploadedImageURL: dataURL,\r\n\t\t\t\t\tuploaded: true,\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\treader.readAsDataURL(input.files[0]);\r\n\t};\r\n\tdetectOD = (img) => {\r\n\t\tlet fd = new FormData();\r\n\t\tfd.append('image', img.files[0]);\r\n\t\tconsole.log(...fd);\r\n\t\tfetch('/image', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\t//headers: {'Content-Type':'multipart/form-data'},\r\n\t\t\tbody: fd,\r\n\t\t})\r\n\t\t\t.then((response) => response.text())\r\n\t\t\t.then((result) => {\r\n\t\t\t\tODimage.src = 'data:image/png;base64,' + result;\r\n\t\t\t\tthis.setState({ ImageURL: 'data:image/png;base64,' + result });\r\n\t\t\t\tODimage.onload = () => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\twidth: ODimage.width,\r\n\t\t\t\t\t\theight: ODimage.width,\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// const canvas = document.getElementById('output');\r\n\t\t\t\t\t// const ctx = canvas.getContext('2d');\r\n\t\t\t\t\t// ctx.drawImage(ODimage, 0, 0);\r\n\t\t\t\t\t// ODimageData = ctx.getImageData(\r\n\t\t\t\t\t// \t0,\r\n\t\t\t\t\t// \t0,\r\n\t\t\t\t\t// \tODimage.width,\r\n\t\t\t\t\t// \tODimage.width\r\n\t\t\t\t\t// );\r\n\t\t\t\t\t// console.log(ODimageData);\r\n\t\t\t\t};\r\n\t\t\t\t\tgenerateImage('output', 'result');\r\n\t\t\t\t\tvar success = true\r\n\t\t\t\t\t// this.setState({\r\n\t\t\t\t\t// \tgenerationStatus: 0,\r\n\t\t\t\t\t// });\r\n\t\t\t\t\tconsole.log('detected');\r\n\t\t\t\t\tif (success) {\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tgenerationStatus: 2,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t})\r\n\t\t\t.catch((error) => console.log('error', error));\r\n\t};\r\n\r\n\tgenerate = async () => {\r\n\t\tif (this.state.generationStatus !== 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconsole.log(this.state);\r\n\t\tif (this.state.uploaded === false) {\r\n\t\t\talert('Please upload an image.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.progress = 0;\r\n\t\twindow.bytesUsed = 0;\r\n\t\tlet updateGenerationProgressInterval = setInterval(() => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tgenerationProgress: window.progress * 100,\r\n\t\t\t\tbytesUsed: window.bytesUsed,\r\n\t\t\t});\r\n\r\n\t\t\tif (this.state.generationStatus !== 1) {\r\n\t\t\t\tclearInterval(updateGenerationProgressInterval);\r\n\t\t\t}\r\n\t\t}, 500);\r\n\r\n\t\tthis.setState({\r\n\t\t\tgenerationStatus: 1,\r\n\t\t\tupdateGenerationProgressInterval: updateGenerationProgressInterval,\r\n\t\t});\r\n\t\tlet success = false;\r\n\t\ttry {\r\n\t\t\tawait this.detectOD(document.getElementById('image'));\r\n\t\t\t\r\n\t\t\t// await generateImage(OD, 'result');\r\n\t\t\tawait console.log('detected');\r\n\t\t\t\r\n\t\t\t//await this.generate();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\r\n\t\t\r\n\t};\r\n\r\n\tcomponentWillUnmount = () => {\r\n\t\tif (this.state.updateGenerationProgressInterval !== -1) {\r\n\t\t\tclearInterval(this.state.updateGenerationProgressInterval);\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"app\">\r\n\t\t\t\t<Container\r\n\t\t\t\t\tfluid\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay:\r\n\t\t\t\t\t\t\tthis.state.generationStatus === 0\r\n\t\t\t\t\t\t\t\t? 'block'\r\n\t\t\t\t\t\t\t\t: 'none',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{/* change layout after user press predict button */}\r\n\r\n\t\t\t\t\t<Row className=\"margin\">\r\n\t\t\t\t\t\t<div className=\"topbar\">\r\n\t\t\t\t\t\t\t<h1 style={{ textAlign: 'center', width: '100%' }}>\r\n\t\t\t\t\t\t\t\tGlaucoMark.js: Take a Glaucoma Test at Home\r\n\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/Lempickax/Glaucomark\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '12px' }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tView Source Code\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row className=\"margin\">\r\n\t\t\t\t\t\t<Col />\r\n\t\t\t\t\t\t<Col xs=\"12\" md=\"8\" lg=\"6\"></Col>\r\n\t\t\t\t\t\t<Col />\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row className=\"margin\">\r\n\t\t\t\t\t\t<Col />\r\n\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\txs=\"12\"\r\n\t\t\t\t\t\t\tmd=\"8\"\r\n\t\t\t\t\t\t\tlg=\"5\"\r\n\t\t\t\t\t\t\txl=\"4\"\r\n\t\t\t\t\t\t\tstyle={{ textAlign: 'center', marginTop: '80px' }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<h5 style={{ textAlign: 'center', width: '100%' }}>\r\n\t\t\t\t\t\t\t\tUpload a image of retina to continue\r\n\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\tthis.state.uploaded\r\n\t\t\t\t\t\t\t\t\t\t? 'Change the image'\r\n\t\t\t\t\t\t\t\t\t\t: 'Upload an image'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonChange={this.onUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t\tcustom\r\n\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\tname=\"image\"\r\n\t\t\t\t\t\t\t\tid=\"image\"\r\n\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t\twidth={this.state.width}\r\n\t\t\t\t\t\t\t\theight={this.state.height}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tid=\"uploaded-image\"\r\n\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t\tsrc={this.state.uploadedImageURL}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col />\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row className=\"margin\">\r\n\t\t\t\t\t\t<Col />\r\n\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\txs=\"12\"\r\n\t\t\t\t\t\t\tmd=\"8\"\r\n\t\t\t\t\t\t\tlg=\"6\"\r\n\t\t\t\t\t\t\tstyle={{ textAlign: 'center' }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\t\tshow={this.state.operating}\r\n\t\t\t\t\t\t\t\tmodalClosed={this.operateCancelHandler}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<h1>Term of Use </h1>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\tThe result from this website can only be\r\n\t\t\t\t\t\t\t\t\t\tused as references.\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\tWhile the predicting model had been\r\n\t\t\t\t\t\t\t\t\t\tvalidated with a high accuracy, the\r\n\t\t\t\t\t\t\t\t\t\ttraining dataset still lacks variety.{' '}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\tThus, the author of this site makes no\r\n\t\t\t\t\t\t\t\t\t\tclaims, promises or guarantees about the\r\n\t\t\t\t\t\t\t\t\t\ttesting results, and expressly disclaims\r\n\t\t\t\t\t\t\t\t\t\tliability for any potential errors.\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\tPlease see a doctor for final diagnosis.{' '}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<PressButton\r\n\t\t\t\t\t\t\t\t\t\tbtnType=\"Success\"\r\n\t\t\t\t\t\t\t\t\t\tclicked={this.generate}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tAgree\r\n\t\t\t\t\t\t\t\t\t</PressButton>\r\n\t\t\t\t\t\t\t\t\t<PressButton\r\n\t\t\t\t\t\t\t\t\t\tbtnType=\"Danger\"\r\n\t\t\t\t\t\t\t\t\t\tclicked={this.operateCancelHandler}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t\t</PressButton>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={this.operateHandler}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tPredict\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col />\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"overlay\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay:\r\n\t\t\t\t\t\t\tthis.state.generationStatus === 1\r\n\t\t\t\t\t\t\t\t? 'block'\r\n\t\t\t\t\t\t\t\t: 'none',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginTop: 'calc( 50vh - 50px )',\r\n\t\t\t\t\t\t\theight: '100px',\r\n\t\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Container fluid>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col />\r\n\t\t\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\t\t\txs=\"12\"\r\n\t\t\t\t\t\t\t\t\tmd=\"8\"\r\n\t\t\t\t\t\t\t\t\tlg=\"6\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ textAlign: 'center' }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Spinner animation=\"border\" role=\"status\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"sr-only\">\r\n\t\t\t\t\t\t\t\t\t\t\tLoading...\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</Spinner>\r\n\t\t\t\t\t\t\t\t\t<p>Predicting results...</p>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\tThis may take 15 to 30 seconds depending\r\n\t\t\t\t\t\t\t\t\t\ton your device.\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col />\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"overlay\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay:\r\n\t\t\t\t\t\t\tthis.state.generationStatus === 2\r\n\t\t\t\t\t\t\t\t? 'block'\r\n\t\t\t\t\t\t\t\t: 'none',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Container fluid>\r\n\t\t\t\t\t\t<Row className=\"margin\">\r\n\t\t\t\t\t\t\t<Col/>\r\n\t\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\t\t\t\txs=\"12\"\r\n\t\t\t\t\t\t\t\tmd=\"8\"\r\n\t\t\t\t\t\t\t\tlg=\"5\"\r\n\t\t\t\t\t\t\t\txl=\"4\"\r\n\t\t\t\t\t\t\t\tstyle={{ textAlign: 'center', margin: '20px' }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tid=\"output\"\r\n\t\t\t\t\t\t\t\t\tsrc={this.state.ImageURL}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<div id=\"result\"></div>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col/>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row className=\"margin\">\r\n\t\t\t\t\t\t\t<Col />\r\n\t\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\t\txs=\"12\"\r\n\t\t\t\t\t\t\t\tmd=\"12\"\r\n\t\t\t\t\t\t\t\tlg=\"12\"\r\n\t\t\t\t\t\t\t\txl=\"10\"\r\n\t\t\t\t\t\t\t\tstyle={{ textAlign: 'center', margin: '20px' }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => window.location.reload()}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tRestart\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col />\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__34Npy\",\"Success\":\"Button_Success__3b4Ig\",\"Danger\":\"Button_Danger__1WXlI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2Q_cQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__tO-Lj\"};","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}